.data
arr: .word 0 -1
arr1: .word 1 -1
arr2: .word 0 0 2 0 0 -1
arr3: .word 0 3 0 0 3 0 3 0 -1
arr4: .word 4 4 0 0 0 0 0 -1
arr5: .word 5 5 5 0 0 0 5 5 5 -1
arrtemp: .space 40
msg: .string " "
.macro print_str (%x)
li a7, 4
la a0, %x
ecall
.end_macro
.macro print_int (%x)
li a7, 1
mv a0, %x
ecall
.end_macro
.text
MAIN:
li t3, -1
la t0, arr2 # load source array
la t1, arrtemp # load auxilary array
li t4, 6 # array size
li s0, 0
loop: # add non zero elements from source array to auxilary array 
lw t5, 0(t0) 
beq s0, t4, replace
beqz t5, addjump
lw t6, 0(t1)
mv t6, t5
sw t6, 0(t1)
addi t0,t0,4
addi s0, s0, 1
addi t1, t1, 4
j loop
addjump:
addi t0, t0, 4
addi s0, s0, 1
j loop

replace: # overwrite source array with auxilary array
la t0, arr2
la t1, arrtemp
li t2, -1
replaceloop:
lw s0, 0(t1)
sw s0, 0(t0)
addi t1, t1, 4
addi t0, t0, 4
beq t2, s0, print
j replaceloop
print: # print modified source array
li t3, -1
la t0, arr2
printloop:
lw t1, 0(t0)
print_int(t1)
addi t0, t0, 4
beq t1, t3, exit
j printloop


exit:
li a7, 10
ecall
